import sgMail from '@sendgrid/mail';
import { config } from '../config';

export class ReminderEmailService {
  constructor() {
    sgMail.setApiKey(config.sendgridApiKey);
  }

  // Send 24h reminder before booking
  async send24hReminder(opts: {
    to: string;
    customerName?: string;
    muaName?: string;
    serviceName?: string;
    bookingDate: Date;
    address?: string;
  }): Promise<void> {
    const { to, customerName = 'Kh√°ch h√†ng', muaName = 'Makeup Artist', serviceName = 'D·ªãch v·ª•', bookingDate, address } = opts;
    const subject = '‚è∞ Nh·∫Øc nh·ªü: L·ªãch h·∫πn c·ªßa b·∫°n s·∫Øp di·ªÖn ra trong 24 gi·ªù - AURA';
    const html = this.get24hTemplate(customerName, muaName, serviceName, bookingDate, address);
    
    try {
      await this.send({ to, subject, html });
      console.log(`‚úÖ 24h reminder email sent to ${to}`);
    } catch (error: any) {
      console.error('‚ùå Error sending 24h reminder email:', error.response?.body || error);
      throw new Error('Failed to send 24h reminder email');
    }
  }

  // Send 1h reminder before booking
  async send1hReminder(opts: {
    to: string;
    customerName?: string;
    muaName?: string;
    serviceName?: string;
    bookingDate: Date;
    address?: string;
  }): Promise<void> {
    const { to, customerName = 'Kh√°ch h√†ng', muaName = 'Makeup Artist', serviceName = 'D·ªãch v·ª•', bookingDate, address } = opts;
    const subject = 'üîî Nh·∫Øc nh·ªü kh·∫©n: L·ªãch h·∫πn c·ªßa b·∫°n s·∫Øp b·∫Øt ƒë·∫ßu trong 1 gi·ªù - AURA';
    const html = this.get1hTemplate(customerName, muaName, serviceName, bookingDate, address);
    
    try {
      await this.send({ to, subject, html });
      console.log(`‚úÖ 1h reminder email sent to ${to}`);
    } catch (error: any) {
      console.error('‚ùå Error sending 1h reminder email:', error.response?.body || error);
      throw new Error('Failed to send 1h reminder email');
    }
  }

  // Send booking cancellation notification
  async sendCancelNotice(opts: {
    to: string;
    customerName?: string;
    muaName?: string;
    serviceName?: string;
    bookingDate?: Date;
    reason?: string;
  }): Promise<void> {
    const { to, customerName = 'Kh√°ch h√†ng', muaName = 'Makeup Artist', serviceName = 'D·ªãch v·ª•', bookingDate, reason } = opts;
    const subject = '‚ùå Th√¥ng b√°o h·ªßy l·ªãch h·∫πn - AURA';
    const html = this.getCancelTemplate(customerName, muaName, serviceName, bookingDate, reason);
    
    try {
      await this.send({ to, subject, html });
      console.log(`‚úÖ Cancellation email sent to ${to}`);
    } catch (error: any) {
      console.error('‚ùå Error sending cancellation email:', error.response?.body || error);
      throw new Error('Failed to send cancellation email');
    }
  }

  // Send booking update notification
  async sendUpdateNotice(opts: {
    to: string;
    customerName?: string;
    muaName?: string;
    serviceName?: string;
    oldDate?: Date;
    newDate?: Date;
    address?: string;
  }): Promise<void> {
    const { to, customerName = 'Kh√°ch h√†ng', muaName = 'Makeup Artist', serviceName = 'D·ªãch v·ª•', oldDate, newDate, address } = opts;
    const subject = 'üîÑ Th√¥ng b√°o thay ƒë·ªïi l·ªãch h·∫πn - AURA';
    const html = this.getUpdateTemplate(customerName, muaName, serviceName, oldDate, newDate, address);
    
    try {
      await this.send({ to, subject, html });
      console.log(`‚úÖ Update email sent to ${to}`);
    } catch (error: any) {
      console.error('‚ùå Error sending update email:', error.response?.body || error);
      throw new Error('Failed to send update email');
    }
  }

  // Private method to send email via SendGrid
  private async send({ to, subject, html }: { to: string; subject: string; html: string }): Promise<void> {
    // T·∫°o text version t·ª´ HTML (ƒë∆°n gi·∫£n)
    const text = html
      .replace(/<[^>]*>/g, '') // Lo·∫°i b·ªè HTML tags
      .replace(/&nbsp;/g, ' ')
      .replace(/\s+/g, ' ')
      .trim();

    const msg = {
      to,
      from: {
        name: 'AURA Beauty Services',
        email: config.smtpUser,
      },
      replyTo: config.smtpUser, // Cho ph√©p kh√°ch h√†ng reply
      subject,
      html,
      text, // Text version cho email client kh√¥ng h·ªó tr·ª£ HTML
      trackingSettings: {
        clickTracking: { enable: false },
        openTracking: { enable: false },
      },
      // Th√™m headers ch·ªëng spam
      headers: {
        'X-Entity-Ref-ID': `booking-reminder-${Date.now()}`,
      },
    };

    await sgMail.send(msg);
  }

  // Helper to format date/time
  private formatDateTime(dt?: Date): string {
    if (!dt) return '';
    try {
      return new Date(dt).toLocaleString('vi-VN', { 
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        hour12: false
      });
    } catch {
      return '';
    }
  }

  // Template for 24h reminder
  private get24hTemplate(customerName: string, muaName: string, serviceName: string, bookingDate: Date, address?: string): string {
    const when = this.formatDateTime(bookingDate);
    return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
          body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.8; color: #2c3e50; background-color: #f5f5f5; margin: 0; padding: 0; }
          .email-wrapper { width: 100%; background-color: #f5f5f5; padding: 40px 0; }
          .container { max-width: 600px; margin: 0 auto; background-color: #ffffff; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 40px 30px; text-align: center; }
          .header h1 { margin: 0; font-size: 28px; font-weight: 600; letter-spacing: 0.5px; }
          .content { padding: 40px 30px; }
          .greeting { font-size: 18px; color: #2c3e50; margin-bottom: 20px; font-weight: 500; }
          .message { font-size: 16px; color: #555; margin-bottom: 30px; line-height: 1.8; }
          .info-box { background: #f8f9fa; border-left: 4px solid #667eea; padding: 25px; margin: 30px 0; border-radius: 4px; }
          .info-label { font-size: 12px; color: #7f8c8d; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 5px; font-weight: 600; }
          .info-value { font-size: 16px; color: #2c3e50; margin-bottom: 15px; font-weight: 500; }
          .highlight { background: #fff3cd; padding: 15px; border-radius: 4px; margin: 20px 0; border-left: 4px solid #ffc107; }
          .highlight-text { color: #856404; font-weight: 500; margin: 0; }
          .footer { background: #34495e; color: #ecf0f1; padding: 30px; text-align: center; font-size: 14px; }
          .footer p { margin: 5px 0; }
          .divider { height: 1px; background: #e0e0e0; margin: 20px 0; }
        </style>
      </head>
      <body>
        <div class="email-wrapper">
          <div class="container">
            <div class="header">
              <h1>Nh·∫Øc nh·ªü l·ªãch h·∫πn</h1>
            </div>
            <div class="content">
              <div class="greeting">K√≠nh g·ª≠i ${customerName},</div>
              <div class="message">
                ƒê√¢y l√† th√¥ng b√°o nh·∫Øc nh·ªü v·ªÅ l·ªãch h·∫πn s·∫Øp t·ªõi c·ªßa qu√Ω kh√°ch t·∫°i AURA. L·ªãch h·∫πn c·ªßa qu√Ω kh√°ch s·∫Ω di·ªÖn ra trong v√≤ng 24 gi·ªù t·ªõi.
              </div>
              <div class="highlight">
                <p class="highlight-text">Vui l√≤ng l∆∞u √Ω th·ªùi gian v√† chu·∫©n b·ªã s·∫µn s√†ng cho bu·ªïi h·∫πn.</p>
              </div>
              <div class="info-box">
                <div class="info-label">Makeup Artist</div>
                <div class="info-value">${muaName}</div>
                <div class="divider"></div>
                <div class="info-label">D·ªãch v·ª•</div>
                <div class="info-value">${serviceName}</div>
                <div class="divider"></div>
                <div class="info-label">Th·ªùi gian</div>
                <div class="info-value">${when}</div>
                ${address ? `
                <div class="divider"></div>
                <div class="info-label">ƒê·ªãa ƒëi·ªÉm</div>
                <div class="info-value">${address}</div>
                ` : ''}
              </div>
              <div class="message">
                N·∫øu qu√Ω kh√°ch c·∫ßn thay ƒë·ªïi ho·∫∑c c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i s·ªõm nh·∫•t c√≥ th·ªÉ ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.
              </div>
            </div>
            <div class="footer">
              <p><strong>AURA Beauty Services</strong></p>
              <p>C·∫£m ∆°n qu√Ω kh√°ch ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i</p>
              <p style="margin-top: 15px; font-size: 12px; opacity: 0.8;">&copy; 2024 AURA. All rights reserved.</p>
            </div>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  // Template for 1h reminder
  private get1hTemplate(customerName: string, muaName: string, serviceName: string, bookingDate: Date, address?: string): string {
    const when = this.formatDateTime(bookingDate);
    return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
          body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.8; color: #2c3e50; background-color: #f5f5f5; margin: 0; padding: 0; }
          .email-wrapper { width: 100%; background-color: #f5f5f5; padding: 40px 0; }
          .container { max-width: 600px; margin: 0 auto; background-color: #ffffff; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); color: white; padding: 40px 30px; text-align: center; }
          .header h1 { margin: 0; font-size: 28px; font-weight: 600; letter-spacing: 0.5px; }
          .content { padding: 40px 30px; }
          .greeting { font-size: 18px; color: #2c3e50; margin-bottom: 20px; font-weight: 500; }
          .message { font-size: 16px; color: #555; margin-bottom: 30px; line-height: 1.8; }
          .info-box { background: #f8f9fa; border-left: 4px solid #f59e0b; padding: 25px; margin: 30px 0; border-radius: 4px; }
          .info-label { font-size: 12px; color: #7f8c8d; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 5px; font-weight: 600; }
          .info-value { font-size: 16px; color: #2c3e50; margin-bottom: 15px; font-weight: 500; }
          .urgent-box { background: #fff3cd; padding: 20px; border-radius: 4px; margin: 25px 0; border: 2px solid #ffc107; text-align: center; }
          .urgent-text { color: #856404; font-weight: 600; font-size: 18px; margin: 0; }
          .footer { background: #34495e; color: #ecf0f1; padding: 30px; text-align: center; font-size: 14px; }
          .footer p { margin: 5px 0; }
          .divider { height: 1px; background: #e0e0e0; margin: 20px 0; }
        </style>
      </head>
      <body>
        <div class="email-wrapper">
          <div class="container">
            <div class="header">
              <h1>Nh·∫Øc nh·ªü kh·∫©n c·∫•p</h1>
            </div>
            <div class="content">
              <div class="greeting">K√≠nh g·ª≠i ${customerName},</div>
              <div class="urgent-box">
                <p class="urgent-text">L·ªäCH H·∫∏N C·ª¶A QU√ù KH√ÅCH S·∫º B·∫ÆT ƒê·∫¶U TRONG 1 GI·ªù N·ªÆA</p>
              </div>
              <div class="message">
                ƒê√¢y l√† th√¥ng b√°o nh·∫Øc nh·ªü kh·∫©n c·∫•p v·ªÅ l·ªãch h·∫πn s·∫Øp di·ªÖn ra c·ªßa qu√Ω kh√°ch. Vui l√≤ng chu·∫©n b·ªã v√† di chuy·ªÉn ƒë·∫øn ƒë·ªãa ƒëi·ªÉm ƒë·ªÉ ƒë·∫£m b·∫£o ƒë√∫ng gi·ªù.
              </div>
              <div class="info-box">
                <div class="info-label">Makeup Artist</div>
                <div class="info-value">${muaName}</div>
                <div class="divider"></div>
                <div class="info-label">D·ªãch v·ª•</div>
                <div class="info-value">${serviceName}</div>
                <div class="divider"></div>
                <div class="info-label">Th·ªùi gian</div>
                <div class="info-value">${when}</div>
                ${address ? `
                <div class="divider"></div>
                <div class="info-label">ƒê·ªãa ƒëi·ªÉm</div>
                <div class="info-value">${address}</div>
                ` : ''}
              </div>
              <div class="message">
                Ch√∫ng t√¥i r·∫•t mong ƒë∆∞·ª£c ph·ª•c v·ª• qu√Ω kh√°ch. Ch√∫c qu√Ω kh√°ch c√≥ tr·∫£i nghi·ªám tuy·ªát v·ªùi!
              </div>
            </div>
            <div class="footer">
              <p><strong>AURA Beauty Services</strong></p>
              <p>C·∫£m ∆°n qu√Ω kh√°ch ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i</p>
              <p style="margin-top: 15px; font-size: 12px; opacity: 0.8;">&copy; 2024 AURA. All rights reserved.</p>
            </div>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  // Template for cancellation
  private getCancelTemplate(customerName: string, muaName: string, serviceName: string, bookingDate?: Date, reason?: string): string {
    const when = this.formatDateTime(bookingDate);
    return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
          body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.8; color: #2c3e50; background-color: #f5f5f5; margin: 0; padding: 0; }
          .email-wrapper { width: 100%; background-color: #f5f5f5; padding: 40px 0; }
          .container { max-width: 600px; margin: 0 auto; background-color: #ffffff; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%); color: white; padding: 40px 30px; text-align: center; }
          .header h1 { margin: 0; font-size: 28px; font-weight: 600; letter-spacing: 0.5px; }
          .content { padding: 40px 30px; }
          .greeting { font-size: 18px; color: #2c3e50; margin-bottom: 20px; font-weight: 500; }
          .message { font-size: 16px; color: #555; margin-bottom: 30px; line-height: 1.8; }
          .info-box { background: #f8f9fa; border-left: 4px solid #dc2626; padding: 25px; margin: 30px 0; border-radius: 4px; }
          .info-label { font-size: 12px; color: #7f8c8d; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 5px; font-weight: 600; }
          .info-value { font-size: 16px; color: #2c3e50; margin-bottom: 15px; font-weight: 500; }
          .reason-box { background: #fee; padding: 20px; border-radius: 4px; margin: 25px 0; border-left: 4px solid #dc2626; }
          .reason-label { font-size: 12px; color: #991b1b; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 8px; font-weight: 600; }
          .reason-text { color: #7f1d1d; font-size: 15px; margin: 0; }
          .footer { background: #34495e; color: #ecf0f1; padding: 30px; text-align: center; font-size: 14px; }
          .footer p { margin: 5px 0; }
          .divider { height: 1px; background: #e0e0e0; margin: 20px 0; }
        </style>
      </head>
      <body>
        <div class="email-wrapper">
          <div class="container">
            <div class="header">
              <h1>Th√¥ng b√°o h·ªßy l·ªãch h·∫πn</h1>
            </div>
            <div class="content">
              <div class="greeting">K√≠nh g·ª≠i ${customerName},</div>
              <div class="message">
                Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng l·ªãch h·∫πn c·ªßa qu√Ω kh√°ch t·∫°i AURA ƒë√£ ƒë∆∞·ª£c h·ªßy. Ch√∫ng t√¥i r·∫•t ti·∫øc v·ªÅ s·ª± b·∫•t ti·ªán n√†y.
              </div>
              <div class="info-box">
                <div class="info-label">Makeup Artist</div>
                <div class="info-value">${muaName}</div>
                <div class="divider"></div>
                <div class="info-label">D·ªãch v·ª•</div>
                <div class="info-value">${serviceName}</div>
                ${when ? `
                <div class="divider"></div>
                <div class="info-label">Th·ªùi gian ƒë√£ h·ªßy</div>
                <div class="info-value">${when}</div>
                ` : ''}
              </div>
              ${reason ? `
              <div class="reason-box">
                <div class="reason-label">L√Ω do h·ªßy</div>
                <p class="reason-text">${reason}</p>
              </div>
              ` : ''}
              <div class="message">
                N·∫øu qu√Ω kh√°ch c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o ho·∫∑c mu·ªën ƒë·∫∑t l·ªãch h·∫πn m·ªõi, vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n chƒÉm s√≥c kh√°ch h√†ng c·ªßa ch√∫ng t√¥i. Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ qu√Ω kh√°ch.
              </div>
              <div class="message">
                Ch√∫ng t√¥i hy v·ªçng ƒë∆∞·ª£c ph·ª•c v·ª• qu√Ω kh√°ch trong t∆∞∆°ng lai g·∫ßn.
              </div>
            </div>
            <div class="footer">
              <p><strong>AURA Beauty Services</strong></p>
              <p>C·∫£m ∆°n qu√Ω kh√°ch ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i</p>
              <p style="margin-top: 15px; font-size: 12px; opacity: 0.8;">&copy; 2024 AURA. All rights reserved.</p>
            </div>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  // Template for update
  private getUpdateTemplate(customerName: string, muaName: string, serviceName: string, oldDate?: Date, newDate?: Date, address?: string): string {
    const oldWhen = this.formatDateTime(oldDate);
    const newWhen = this.formatDateTime(newDate);
    return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
          body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.8; color: #2c3e50; background-color: #f5f5f5; margin: 0; padding: 0; }
          .email-wrapper { width: 100%; background-color: #f5f5f5; padding: 40px 0; }
          .container { max-width: 600px; margin: 0 auto; background-color: #ffffff; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%); color: white; padding: 40px 30px; text-align: center; }
          .header h1 { margin: 0; font-size: 28px; font-weight: 600; letter-spacing: 0.5px; }
          .content { padding: 40px 30px; }
          .greeting { font-size: 18px; color: #2c3e50; margin-bottom: 20px; font-weight: 500; }
          .message { font-size: 16px; color: #555; margin-bottom: 30px; line-height: 1.8; }
          .info-box { background: #f8f9fa; border-left: 4px solid #3b82f6; padding: 25px; margin: 30px 0; border-radius: 4px; }
          .info-label { font-size: 12px; color: #7f8c8d; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 5px; font-weight: 600; }
          .info-value { font-size: 16px; color: #2c3e50; margin-bottom: 15px; font-weight: 500; }
          .change-box { background: #dbeafe; padding: 15px; border-radius: 4px; margin: 15px 0; border-left: 4px solid #60a5fa; }
          .change-label { font-size: 12px; color: #1e40af; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 5px; font-weight: 600; }
          .change-value { color: #1e3a8a; font-size: 15px; margin: 0; font-weight: 500; }
          .new-time-box { background: #d1fae5; padding: 15px; border-radius: 4px; margin: 15px 0; border-left: 4px solid #10b981; }
          .new-time-label { font-size: 12px; color: #065f46; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 5px; font-weight: 600; }
          .new-time-value { color: #064e3b; font-size: 15px; margin: 0; font-weight: 500; }
          .footer { background: #34495e; color: #ecf0f1; padding: 30px; text-align: center; font-size: 14px; }
          .footer p { margin: 5px 0; }
          .divider { height: 1px; background: #e0e0e0; margin: 20px 0; }
        </style>
      </head>
      <body>
        <div class="email-wrapper">
          <div class="container">
            <div class="header">
              <h1>Th√¥ng b√°o c·∫≠p nh·∫≠t l·ªãch h·∫πn</h1>
            </div>
            <div class="content">
              <div class="greeting">K√≠nh g·ª≠i ${customerName},</div>
              <div class="message">
                Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng th√¥ng tin l·ªãch h·∫πn c·ªßa qu√Ω kh√°ch t·∫°i AURA ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t. Vui l√≤ng xem chi ti·∫øt b√™n d∆∞·ªõi.
              </div>
              <div class="info-box">
                <div class="info-label">Makeup Artist</div>
                <div class="info-value">${muaName}</div>
                <div class="divider"></div>
                <div class="info-label">D·ªãch v·ª•</div>
                <div class="info-value">${serviceName}</div>
                ${address ? `
                <div class="divider"></div>
                <div class="info-label">ƒê·ªãa ƒëi·ªÉm</div>
                <div class="info-value">${address}</div>
                ` : ''}
              </div>
              ${oldWhen ? `
              <div class="change-box">
                <div class="change-label">Th·ªùi gian c≈©</div>
                <p class="change-value">${oldWhen}</p>
              </div>
              ` : ''}
              ${newWhen ? `
              <div class="new-time-box">
                <div class="new-time-label">Th·ªùi gian m·ªõi</div>
                <p class="new-time-value">${newWhen}</p>
              </div>
              ` : ''}
              <div class="message">
                Vui l√≤ng l∆∞u √Ω th·ªùi gian m·ªõi v√† chu·∫©n b·ªã cho l·ªãch h·∫πn c·ªßa qu√Ω kh√°ch. N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.
              </div>
            </div>
            <div class="footer">
              <p><strong>AURA Beauty Services</strong></p>
              <p>C·∫£m ∆°n qu√Ω kh√°ch ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i</p>
              <p style="margin-top: 15px; font-size: 12px; opacity: 0.8;">&copy; 2024 AURA. All rights reserved.</p>
            </div>
          </div>
        </div>
      </body>
      </html>
    `;
  }
}